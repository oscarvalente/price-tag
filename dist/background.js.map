{"version":3,"file":"background.js","sources":["../background.js"],"sourcesContent":["let State = {\n    recordActive: false,\n    notifications: {},\n    notificationsCounter: 0,\n    autoSaveEnabled: false,\n    isPriceUpdateEnabled: false,\n    selection: null,\n    isSimilarElementHighlighted: false,\n    originalBackgroundColor: null,\n    isCurrentPageTracked: false,\n    faviconURL: null,\n    _faviconURLMap: {},\n    currentURL: null,\n    canonicalURL: null,\n    browserURL: null,\n    domain: null\n};\n\nconst DEFAULT_ICON = \"assets/icon_48.png\";\nconst TRACKED_ITEM_ICON = \"assets/icon_active_48.png\";\nconst DEFAULT_TITLE = \"Price Tag\";\nconst TRACKED_ITEM_TITLE = \"Price Tag - This item is being tracked\";\n\nconst PRICE_CHECKING_INTERVAL = 180000;\n// const PRICE_CHECKING_INTERVAL = 10000;\nconst SYNCHING_INTERVAL = 120000;\nconst ICONS = {\n    PRICE_UPDATE: \"./assets/time-is-money.svg\",\n    PRICE_NOT_FOUND: \"./assets/time.svg\",\n    PRICE_FIX: \"./assets/coin.svg\"\n};\n\nconst MATCHES = {\n    PRICE: /((?:\\d+[.,])?\\d+(?:[.,]\\d+)?)/,\n    HOSTNAME: /https?:\\/\\/([\\w.]+)\\/*/,\n    DOMAIN: /^([\\w-]+\\.)+[\\w-]+\\w$/,\n    URL: /^https?:\\/\\/([\\w-]+\\.)+[\\w-]+\\w(\\/[\\w-=.]+)+\\/?(\\?([\\w]+=?[\\w-%!@()\\\\[\"#\\]]+&?)*)?/,\n    CAPTURE: {\n        DOMAIN_IN_URL: /https?:\\/\\/([\\w.]+)\\/*/,\n        HOSTNAME_AND_PATH: /^https?:\\/\\/((?:[\\w-]+\\.)+[\\w-]+\\w(?:\\/[\\w-=.]+)+\\/?)/,\n        PROTOCOL_HOSTNAME_AND_PATH: /^(https?:\\/\\/(?:[\\w-]+\\.)+[\\w-]+\\w(?:\\/[\\w-=.]+)+\\/?)/\n    }\n};\n\nconst ITEM_STATUS = {\n    WATCHED: \"WATCHED\",\n    NOT_FOUND: \"NOT_FOUND\",\n    INCREASED: \"INCREASED\",\n    DECREASED: \"DECREASED\",\n    ACK_DECREASE: \"ACK_DECREASE\",\n    ACK_INCREASE: \"ACK_INCREASE\",\n    FIXED: \"FIXED\"\n};\n\nconst ALL_ITEM_STATUSES = Object.values(ITEM_STATUS);\n\nfunction removeStatuses(item, statusesToRemove = []) {\n    return statusesToRemove.length > 0 && item.statuses.length > 0 ?\n        item.statuses.filter(status => !statusesToRemove.includes(status)) :\n        item.statuses;\n}\n\nfunction toUnique(array) {\n    return Array.from(new Set(array));\n}\n\nfunction updateItemCurrentPrice(item, newPrice) {\n    const previousPrice = item.currentPrice;\n\n    const newItem = {\n        ...item,\n        previousPrice,\n        currentPrice: newPrice\n    };\n\n    return updateItemDiffPercentage(newItem);\n}\n\nfunction updateItemDiffPercentage(item) {\n    const diff = Math.abs(item.currentPrice - item.price) * 100 / item.price;\n    const diffPerc = parseFloat(diff.toFixed(2));\n    let diffPercentage = null;\n    if (diffPerc) {\n        diffPercentage = item.currentPrice > item.price ?\n            +diffPerc :\n            -diffPerc;\n\n        if (diffPercentage > 0 && diffPercentage < 1) {\n            diffPercentage = Math.ceil(diffPercentage);\n        } else if (diffPercentage > -1 && diffPercentage < 0) {\n            diffPercentage = Math.floor(diffPercentage);\n        }\n    }\n\n    item.diffPercentage = diffPercentage;\n\n    return item;\n}\n\nfunction updateItemTrackStatus(item, newPrice, statusesToAdd, statusesToRemove, forceStartingPrice = false) {\n    if (!statusesToAdd) {\n        statusesToAdd = [];\n    }\n\n    if (!statusesToRemove) {\n        statusesToRemove = [];\n    }\n\n    const statuses = toUnique([...removeStatuses(item, statusesToRemove), ...statusesToAdd]);\n    const updatedItem = {\n        ...item,\n        statuses,\n        lastUpdateTimestamp: new Date().getTime()\n    };\n\n    if (forceStartingPrice) {\n        updatedItem.startingPrice = item.price;\n    }\n\n    if (newPrice) {\n        updatedItem.price = newPrice;\n    }\n\n    return updatedItem;\n}\n\nfunction isWatched(item) {\n    return item.statuses.includes(ITEM_STATUS.WATCHED);\n}\n\nfunction isNotFound(item) {\n    return item.statuses.includes(ITEM_STATUS.NOT_FOUND);\n}\n\nfunction hasAcknowledgeDecrease(item) {\n    return item.statuses.includes(ITEM_STATUS.ACK_DECREASE);\n}\n\nfunction hasAcknowledgeIncrease(item) {\n    return item.statuses.includes(ITEM_STATUS.ACK_INCREASE);\n}\n\nfunction onConfirmURLForCreateItemAttempt(tabId, domain, url, selection, price, faviconURL, faviconAlt, callback) {\n    const modalElementId = \"price-tag--url-confirmation\";\n    chrome.tabs.sendMessage(tabId, {\n        type: \"CONFIRMATION_DISPLAY.CREATE\",\n        payload: {elementId: modalElementId}\n    }, ({status}) => {\n        if (status === 1) {\n            const payload = buildURLConfirmationPayload(State.canonicalURL, State.browserURL, domain);\n            chrome.tabs.sendMessage(tabId, {\n                type: \"CONFIRMATION_DISPLAY.LOAD\",\n                payload\n            }, ({status, index}) => {\n                chrome.tabs.sendMessage(tabId, {\n                    type: \"CONFIRMATION_DISPLAY.REMOVE\",\n                    payload: {elementId: modalElementId}\n                });\n\n                if (status === 1) {\n                    switch (index) {\n                        case 0:\n                            // said Yes, can use canonical and remember this option\n                            chrome.storage.local.get([domain], result => {\n                                const domainState = result && result[domain] && JSON.parse(result[domain]) || {};\n                                domainState._canUseCanonical = true;\n                                chrome.storage.local.set({[domain]: JSON.stringify(domainState)});\n                                State = updateCurrentURL(State, State.canonicalURL);\n                                callback(true, true);\n                            });\n                            break;\n                        case 1:\n                            // said Yes, but use canonical just this time\n                            State = updateCurrentURL(State, State.canonicalURL);\n                            callback(true, true);\n                            break;\n                        case 2:\n                            // said No, use browser URL and remember this option\n                            chrome.storage.local.get([domain], result => {\n                                const domainState = result && result[domain] && JSON.parse(result[domain]) || {};\n                                domainState._canUseCanonical = false;\n                                chrome.storage.local.set({[domain]: JSON.stringify(domainState)});\n                                State = updateCurrentURL(State, State.browserURL);\n                                callback(true, false);\n                            });\n                            break;\n                        case 3:\n                            // said No, use browser URL but ask again\n                            State = updateCurrentURL(State, State.browserURL);\n                            callback(true, false);\n                            break;\n                        default:\n                            // cannot recognize this modal button click\n                            callback(false);\n                            break;\n                    }\n                }\n            });\n        }\n    });\n}\n\nfunction onRecordDone(tabId, payload) {\n    const {status, selection, price, faviconURL, faviconAlt} = payload;\n    const {currentURL, domain} = State;\n    if (status > 0) {\n        State = updateFaviconURL(State, State.faviconURL || faviconURL);\n        canDisplayURLConfirmation(State, domain, canDisplay => {\n            if (canDisplay) {\n                onConfirmURLForCreateItemAttempt(tabId, domain, currentURL, selection, price, faviconURL, faviconAlt, (canSave, useCaninocal) => {\n                    if (canSave) {\n                        const url = useCaninocal ? State.canonicalURL : State.browserURL;\n                        checkForURLSimilarity(tabId, domain, url, isToSave => {\n                            if (isToSave) {\n                                createItem(domain, url, selection, price, State.faviconURL, faviconAlt, [ITEM_STATUS.WATCHED]);\n                                updateExtensionAppearance(domain, url, true);\n                            }\n                        });\n                    }\n                });\n            } else {\n                checkForURLSimilarity(tabId, domain, currentURL, isToSave => {\n                    if (isToSave) {\n                        createItem(domain, currentURL, selection, price, State.faviconURL, faviconAlt, [ITEM_STATUS.WATCHED]);\n                        updateExtensionAppearance(domain, currentURL, true);\n                    }\n                });\n            }\n        });\n\n        State = disableRecord(State);\n    }\n}\n\nfunction onRecordCancel() {\n    State = disableRecord(State);\n}\n\nfunction onAutoSaveCheckStatus(sendResponse, {status, url, domain, selection, price, faviconURL, faviconAlt} = {}) {\n    if (status >= 0) {\n        State = updateFaviconURL(State, State.faviconURL || faviconURL);\n        State = setSelectionInfo(State, selection, price, State.faviconURL, faviconAlt);\n        sendResponse(true);\n    } else {\n        sendResponse(false);\n    }\n}\n\nfunction onPriceUpdateCheckStatus(sendResponse, trackedPrice, {status, selection, price, faviconURL, faviconAlt} = {}) {\n    if (status >= 0) {\n        State = updateFaviconURL(State, State.faviconURL || faviconURL);\n        State = setSelectionInfo(State, selection, price, State.faviconURL, faviconAlt);\n        if (toPrice(price) !== trackedPrice) {\n            sendResponse(true);\n            return;\n        }\n    }\n\n    sendResponse(false);\n}\n\nfunction onSimilarElementHighlight({status, isHighlighted: isSimilarElementHighlighted, originalBackgroundColor = null}) {\n    if (status >= 0) {\n        State = setSimilarElementHighlight(State, isSimilarElementHighlighted, originalBackgroundColor);\n    }\n}\n\nfunction createTrackedItem(selection, trackedPrice, previousPrice, faviconURL, faviconAlt, statuses) {\n    if (!previousPrice) {\n        previousPrice = null;\n    }\n\n    const price = toPrice(trackedPrice);\n\n    return {\n        selection,\n        price,\n        currentPrice: price,\n        startingPrice: price,\n        previousPrice,\n        faviconURL,\n        faviconAlt,\n        timestamp: new Date().getTime(),\n        statuses\n    };\n}\n\n// TODO: price becomes a class\nfunction createItem(domain, url, selection, price, faviconURL, faviconAlt, statuses, callback) {\n    chrome.storage.local.get([domain], result => {\n        const items = result && result[domain] ? JSON.parse(result[domain]) : {};\n        items[url] = createTrackedItem(selection, price, undefined, faviconURL, faviconAlt, statuses);\n\n        chrome.storage.local.set({[domain]: JSON.stringify(items)}, () => {\n            State = disableAutoSave(State);\n            if (callback) {\n                callback();\n            }\n            // TODO: sendResponse(\"done\"); // foi gravado ou não\n        });\n    });\n}\n\nfunction toggleRecord(state) {\n    return {\n        ...state,\n        recordActive: !state.recordActive\n    }\n}\n\nfunction disableRecord(state) {\n    return {\n        ...state,\n        recordActive: false\n    }\n}\n\nfunction disableCurrentPageTracked(state) {\n    return {\n        ...state,\n        isCurrentPageTracked: false\n    };\n}\n\nfunction enableCurrentPageTracked(state) {\n    return {\n        ...state,\n        isCurrentPageTracked: true\n    };\n}\n\nfunction updateCurrentDomain(state, domain) {\n    return {\n        ...state,\n        domain\n    };\n}\n\nfunction updateCurrentURL(state, currentURL) {\n    return {\n        ...state,\n        currentURL\n    };\n}\n\nfunction updateCanonicalURL(state, canonicalURL) {\n    return {\n        ...state,\n        canonicalURL\n    };\n}\n\nfunction updateBrowserURL(state, browserURL) {\n    return {\n        ...state,\n        browserURL\n    };\n}\n\nfunction updateFaviconURL(state, faviconURL) {\n    return {\n        ...state,\n        faviconURL\n    };\n}\n\nfunction updateFaviconURLMapItem(state, tabId, faviconURL) {\n    return {\n        ...state,\n        _faviconURLMap: {\n            ...state._faviconURLMap,\n            [tabId]: faviconURL\n        }\n    };\n}\n\nfunction incrementNotificationsCounter(state) {\n    const notificationsCounter = state.notificationsCounter + 1;\n    return {\n        ...state,\n        notificationsCounter\n    }\n}\n\nfunction deleteNotificationsItem(state, notificationId) {\n    const newState = {...state};\n    delete newState.notifications[notificationId];\n    return newState;\n}\n\nfunction updateNotificationsItem(state, notificationId, notificationState) {\n    return {\n        ...state,\n        notifications: {\n            ...state.notifications,\n            [notificationId]: notificationState\n        }\n    };\n}\n\nfunction canDisplayURLConfirmation(state, domain, callback) {\n    chrome.storage.local.get([domain], result => {\n        const domainState = result && result[domain] && JSON.parse(result[domain]) || null;\n        const isUseCanonicalPrefUnset = !domainState || domainState._canUseCanonical === undefined;\n        callback(isUseCanonicalPrefUnset && !!state.canonicalURL &&\n            state.canonicalURL !== state.browserURL);\n    });\n}\n\nfunction setDefaultAppearance() {\n    chrome.browserAction.setTitle({title: DEFAULT_TITLE});\n    chrome.browserAction.setIcon({path: DEFAULT_ICON});\n}\n\nfunction setTrackedItemAppearance() {\n    chrome.browserAction.setTitle({title: TRACKED_ITEM_TITLE});\n    chrome.browserAction.setIcon({path: TRACKED_ITEM_ICON});\n}\n\nfunction enableAutoSave(state, selection) {\n    selection = selection || state.selection;\n    return {\n        ...state,\n        autoSaveEnabled: true,\n        selection\n    };\n}\n\nfunction disableAutoSave(state) {\n    return {\n        ...state,\n        autoSaveEnabled: false\n    };\n}\n\nfunction enablePriceUpdate(state, selection) {\n    return {\n        ...state,\n        isPriceUpdateEnabled: true,\n        selection\n    };\n}\n\nfunction disablePriceUpdate(state) {\n    return {\n        ...state,\n        isPriceUpdateEnabled: false\n    };\n}\n\nfunction setSelectionInfo(state, selection, price, faviconURL, faviconAlt) {\n    return {\n        ...state,\n        selection,\n        price,\n        faviconURL,\n        faviconAlt\n    };\n}\n\nfunction setSimilarElementHighlight(state, isSimilarElementHighlighted, originalBackgroundColor) {\n    return {\n        ...state,\n        isSimilarElementHighlighted,\n        originalBackgroundColor\n    };\n}\n\nfunction checkForPriceChanges() {\n    chrome.storage.local.get(null, result => {\n        for (let domain in result) {\n            if (result.hasOwnProperty(domain) && matchesDomain(domain)) {\n                const domainItems = JSON.parse(result[domain]);\n\n                for (let url in domainItems) {\n                    if (domainItems.hasOwnProperty(url) && matchesURL(url) && isWatched(domainItems[url])) {\n                        const request = new XMLHttpRequest();\n                        const {price: targetPrice, currentPrice} = domainItems[url];\n\n                        request.onload = function () {\n                            const template = createHTMLTemplate(this.response);\n                            try {\n                                let newPrice = null;\n                                const textContent = template.querySelector(domainItems[url].selection).textContent;\n                                if (textContent) {\n                                    const textContentMatch = textContent.match(MATCHES.PRICE);\n                                    if (textContentMatch) {\n                                        [, newPrice] = textContentMatch;\n\n                                        newPrice = toPrice(newPrice);\n\n                                        if (!targetPrice) {\n                                            domainItems[url] = updateItemTrackStatus(domainItems[url], newPrice,\n                                                [ITEM_STATUS.FIXED], [ITEM_STATUS.NOT_FOUND]);\n                                            chrome.storage.local.set({[domain]: JSON.stringify(domainItems)}, () => {\n                                                const notificationId = `TRACK.PRICE_FIXED-${State.notificationsCounter}`;\n                                                createNotification(notificationId, ICONS.PRICE_FIX, \"Fixed price\",\n                                                    `Ermm.. We've just fixed a wrongly set price to ${newPrice}`, url, url, domain);\n                                            });\n                                        } else if (newPrice < currentPrice) {\n                                            const updatedItem = updateItemCurrentPrice(domainItems[url], newPrice);\n                                            domainItems[url] = updateItemTrackStatus(updatedItem, null,\n                                                [ITEM_STATUS.DECREASED],\n                                                [ITEM_STATUS.INCREASED, ITEM_STATUS.NOT_FOUND, ITEM_STATUS.ACK_DECREASE]);\n\n                                            chrome.storage.local.set({[domain]: JSON.stringify(domainItems)}, () => {\n                                                // TODO: sendResponse(\"done\"); // foi actualizado ou não\n                                                if (newPrice < targetPrice && !hasAcknowledgeDecrease(domainItems[url])) {\n                                                    const notificationId = `TRACK.PRICE_UPDATE-${State.notificationsCounter}`;\n                                                    createNotification(notificationId, ICONS.PRICE_UPDATE, \"Lower price!!\",\n                                                        `${newPrice} (previous ${targetPrice})`, url, url, domain, ITEM_STATUS.DECREASED,\n                                                        {\n                                                            buttons: [\n                                                                {\n                                                                    title: `Keep tracking but w/ new price (${newPrice})`\n                                                                },\n                                                                {\n                                                                    title: \"Stop watching\"\n                                                                }\n                                                            ]\n                                                        });\n                                                }\n                                            });\n                                        } else if (newPrice > currentPrice) {\n                                            const updatedItem = updateItemCurrentPrice(domainItems[url], newPrice); // update current price and previous\n                                            domainItems[url] = updateItemTrackStatus(updatedItem, null,\n                                                [ITEM_STATUS.INCREASED],\n                                                [ITEM_STATUS.DECREASED, ITEM_STATUS.NOT_FOUND, ITEM_STATUS.ACK_INCREASE]);\n\n                                            chrome.storage.local.set({[domain]: JSON.stringify(domainItems)}, () => {\n                                                // TODO: sendResponse(\"done\"); // foi actualizado ou não\n\n                                                if (!hasAcknowledgeIncrease(domainItems[url])) {\n                                                    const notificationId = `TRACK.PRICE_UPDATE-${State.notificationsCounter}`;\n                                                    const notificationOptions = domainItems[url].price !== domainItems[url].previousPrice ?\n                                                        {\n                                                            buttons: [\n                                                                {\n                                                                    title: `Increase interest price to the previous (${domainItems[url].previousPrice})`\n                                                                }\n                                                            ]\n                                                        } :\n                                                        {\n                                                            buttons: []\n                                                        };\n                                                    notificationOptions.buttons.push(\n                                                        {\n                                                            title: \"Stop watching\"\n                                                        }\n                                                    );\n                                                    createNotification(notificationId, ICONS.PRICE_UPDATE, \"Price increase\",\n                                                        `${newPrice} (previous ${domainItems[url].previousPrice})`, url, url, domain, ITEM_STATUS.INCREASED,\n                                                        notificationOptions);\n                                                }\n                                            });\n                                        } else if (!isNotFound(domainItems[url])) { // NOTE: Here, price is the same\n                                            domainItems[url] = updateItemTrackStatus(domainItems[url], null,\n                                                null, [ITEM_STATUS.NOT_FOUND]);\n                                            chrome.storage.local.set({[domain]: JSON.stringify(domainItems)}, () => {\n                                                // TODO: sendResponse(\"done\"); // foi actualizado ou não\n                                            });\n                                        } else {\n                                            domainItems[url] = updateItemTrackStatus(domainItems[url], null,\n                                                null, [ITEM_STATUS.NOT_FOUND]);\n                                            chrome.storage.local.set({[domain]: JSON.stringify(domainItems)});\n                                        }\n                                    }\n                                }\n\n                                if (domainItems[url].price && !newPrice) {\n                                    if (!isNotFound(domainItems[url])) {\n                                        domainItems[url] = updateItemTrackStatus(domainItems[url], null,\n                                            [ITEM_STATUS.NOT_FOUND],\n                                            [ITEM_STATUS.DECREASED, ITEM_STATUS.INCREASED, ITEM_STATUS.FIXED, ITEM_STATUS.ACK_DECREASE]);\n\n                                        chrome.storage.local.set({[domain]: JSON.stringify(domainItems)}, () => {\n                                            // TODO: sendResponse(\"done\"); // foi actualizado ou não\n                                            const notificationId = `TRACK.PRICE_NOT_FOUND-${State.notificationsCounter}`;\n                                            const previousPrice = targetPrice ? ` (previous ${targetPrice})` : \"\";\n                                            createNotification(notificationId, ICONS.PRICE_NOT_FOUND, \"Price gone\",\n                                                `Price tag no longer found${previousPrice}`, url, url, domain);\n                                        });\n                                    }\n                                }\n                            } catch (e) {\n                                if (!isNotFound(domainItems[url])) {\n                                    console.warn(`Invalid price selection element in\\n${url}:\\t\"${domainItems[url].selection}\"`);\n                                    domainItems[url] = updateItemTrackStatus(domainItems[url], null,\n                                        [ITEM_STATUS.NOT_FOUND],\n                                        [ITEM_STATUS.DECREASED, ITEM_STATUS.INCREASED, ITEM_STATUS.FIXED, ITEM_STATUS.ACK_DECREASE]);\n\n                                    chrome.storage.local.set({[domain]: JSON.stringify(domainItems)}, () => {\n                                        const notificationId = `TRACK.PRICE_NOT_FOUND-${State.notificationsCounter}`;\n                                        const previousPrice = targetPrice ? ` (previous ${targetPrice})` : \"\";\n                                        createNotification(notificationId, ICONS.PRICE_NOT_FOUND, \"Price gone\",\n                                            `Price tag no longer found${previousPrice}`, url, url, domain);\n                                    });\n                                }\n                            }\n                        };\n\n                        request.open(\"GET\", url);\n                        request.send();\n                    }\n                }\n            }\n        }\n    });\n}\n\nfunction getTrackedItems(callback) {\n    chrome.storage.local.get(null, result => {\n        let trackedItems = [];\n        Object.keys(result).forEach(key => {\n            if (matchesDomain(key)) {\n                const domainData = result[key];\n                const domainItems = JSON.parse(domainData) || null;\n                if (domainItems) {\n                    let items = [];\n                    Object.keys(domainItems).forEach(url => {\n                        if (matchesHostname(url) && isWatched(domainItems[url])) {\n                            const item = {\n                                ...domainItems[url],\n                                url: url\n                            };\n                            items.push(item);\n                        }\n                    });\n                    trackedItems = [...trackedItems, ...items];\n                }\n            }\n        });\n        trackedItems.sort(sortItemsByTime);\n        callback(trackedItems);\n    });\n}\n\nfunction removeTrackedItem(url, currentURL, callback) {\n    let found = false;\n    chrome.storage.local.get(null, result => {\n        Object.keys(result).forEach(domain => {\n            if (matchesDomain(domain)) {\n                const domainData = result[domain];\n                const domainItems = JSON.parse(domainData) || null;\n                if (domainItems[url]) {\n                    found = true;\n\n                    domainItems[url] = updateItemTrackStatus(domainItems[url], null, null, ALL_ITEM_STATUSES); // stop watching\n                    chrome.storage.local.set({[domain]: JSON.stringify(domainItems)}, () => {\n                        if (currentURL === url) {\n                            updateAutoSaveStatus(url, domain);\n                            updatePriceUpdateStatus(url, domain);\n                            updateExtensionAppearance(domain, url, false);\n                        }\n                        callback(true);\n                    });\n                }\n            }\n        });\n        if (!found) {\n            callback(false);\n        }\n    });\n}\n\nfunction clearNotification(notifId, wasClosedByUser) {\n    chrome.notifications.clear(notifId, wasClickedByUser => {\n        if (wasClickedByUser || wasClosedByUser) {\n            const {domain, url, type} = State.notifications[notifId];\n            chrome.storage.local.get([domain], result => {\n                const domainItems = result && result[domain] ? JSON.parse(result[domain]) : null;\n                switch (type) {\n                    case ITEM_STATUS.DECREASED:\n                        domainItems[url] = updateItemTrackStatus(domainItems[url], null, [ITEM_STATUS.ACK_DECREASE]);\n                        break;\n                    case ITEM_STATUS.INCREASED:\n                        domainItems[url] = updateItemTrackStatus(domainItems[url], null, [ITEM_STATUS.ACK_INCREASE]);\n                        break;\n                }\n\n                chrome.storage.local.set({[domain]: JSON.stringify(domainItems)});\n            });\n        }\n\n        State = deleteNotificationsItem(State, notifId);\n    });\n}\n\nfunction createNotification(notifId, iconUrl, title, message, contextMessage = \"\", url, domain, type, extraOptions = {}) {\n    const options = {\n        type: \"basic\",\n        title,\n        message,\n        iconUrl,\n        contextMessage,\n        requireInteraction: true,\n        ...extraOptions\n    };\n\n    chrome.notifications.create(notifId, options, id => {\n        State = updateNotificationsItem(State, id, {\n            url,\n            domain,\n            type\n        });\n    });\n\n    State = incrementNotificationsCounter(State);\n}\n\nfunction toPrice(price) {\n    const priceNumber = parseFloat(price.replace(\",\", \".\"));\n    const formattedPrice = priceNumber.toFixed(2);\n    return parseFloat(formattedPrice);\n}\n\nfunction createHTMLTemplate(html) {\n    var template = document.createElement(\"template\");\n    html = html.trim();\n    template.innerHTML = html;\n    return template.content;\n}\n\nfunction isCanonicalURLRelevant(canonical) {\n    return canonical && matchesHostnameAndPath(canonical);\n}\n\nfunction sortItemsByTime({timestamp: tsA}, {timestamp: tsB}) {\n    return tsA - tsB;\n}\n\nfunction matchesDomain(string) {\n    return MATCHES.DOMAIN.test(string);\n}\n\nfunction matchesHostname(string) {\n    return MATCHES.HOSTNAME.test(string);\n}\n\nfunction matchesHostnameAndPath(string) {\n    return MATCHES.CAPTURE.HOSTNAME_AND_PATH.test(string);\n}\n\nfunction matchesURL(string) {\n    return MATCHES.URL.test(string);\n}\n\nfunction parseDomainState(result, domain) {\n    return result && result[domain] && JSON.parse(result[domain]) || null;\n}\n\nfunction setupTrackingPolling() {\n    checkForPriceChanges();\n    // TODO: remove settimeout (for test purposes)\n    // setTimeout(checkForPriceChanges, 20000);\n    setInterval(checkForPriceChanges, PRICE_CHECKING_INTERVAL);\n}\n\nfunction updateAutoSaveStatus(url, domain) {\n    chrome.storage.local.get([domain], result => {\n        const items = result && result[domain] ? JSON.parse(result[domain]) : {};\n        const isItemNullOrUnwatched = !items[url] || !isWatched(items[url]);\n        if (items && isItemNullOrUnwatched) {\n            const urlFromDomain = Object.keys(items)[0];\n            if (items[urlFromDomain] && items[urlFromDomain].selection) {\n                State = enableAutoSave(State, items[urlFromDomain].selection);\n            }\n        } else {\n            State = disableAutoSave(State);\n        }\n    });\n}\n\nfunction updatePriceUpdateStatus(url, domain) {\n    chrome.storage.local.get([domain], result => {\n        const items = result && result[domain] ? JSON.parse(result[domain]) : {};\n        const item = items[url];\n        const hasItemPriceIncOrDec = item && item.price !== item.currentPrice;\n        if (hasItemPriceIncOrDec) {\n            State = enablePriceUpdate(State, item.selection);\n        } else {\n            State = disablePriceUpdate(State);\n        }\n    });\n}\n\nfunction updateExtensionAppearance(currentDomain, currentURL, forcePageTrackingTo) {\n    if (forcePageTrackingTo === true) {\n        setTrackedItemAppearance();\n        State = enableCurrentPageTracked(State);\n    } else if (forcePageTrackingTo === false) {\n        setDefaultAppearance();\n        State = disableCurrentPageTracked(State);\n    } else if (!forcePageTrackingTo) {\n        // TODO: Fix bug - if domain has (_isPathEnoughToTrack === true) then ALSO try to use the path only URL\n        // TODO: (cont.) However the currentURL needs to be used too because user may have chosen the path is enough\n        // TODO: not on the first item to be tracked in this domain\n        chrome.storage.local.get([currentDomain], result => {\n            const domainState = parseDomainState(result, currentDomain);\n            if (domainState) {\n                const item = domainState[currentURL];\n                if (item && isWatched(item)) {\n                    setTrackedItemAppearance();\n                    State = enableCurrentPageTracked(State);\n                } else {\n                    setDefaultAppearance();\n                    State = disableCurrentPageTracked(State);\n                }\n            } else {\n                setDefaultAppearance();\n                State = disableCurrentPageTracked(State);\n            }\n        });\n    }\n}\n\nfunction captureHostAndPathFromURL(url) {\n    const captureHostAndPath = url.match(MATCHES.CAPTURE.HOSTNAME_AND_PATH);\n    let hostAndPath = null;\n    if (captureHostAndPath) {\n        [, hostAndPath] = captureHostAndPath;\n    }\n    return hostAndPath;\n}\n\nfunction captureProtocolHostAndPathFromURL(url) {\n    const captureProtocolHostAndPath = url.match(MATCHES.CAPTURE.PROTOCOL_HOSTNAME_AND_PATH);\n    let protocolHostAndPath = null;\n    if (captureProtocolHostAndPath) {\n        [, protocolHostAndPath] = captureProtocolHostAndPath;\n    }\n    return protocolHostAndPath;\n}\n\nfunction searchForEqualPathWatchedItem(domainState, currentURL, callback) {\n    const currentHostAndPath = captureHostAndPathFromURL(currentURL);\n    let foundOne = false;\n    for (let url in domainState) {\n        if (domainState.hasOwnProperty(url) && matchesURL(url)) {\n            if (isWatched(domainState[url])) {\n                if (currentURL === url) {\n                    //    if they're exactly the same\n                    callback(null);\n                    return;\n                } else {\n                    const hostAndPath = captureHostAndPathFromURL(url);\n                    if (hostAndPath === currentHostAndPath) {\n                        foundOne = foundOne === false;\n                        callback(url);\n                        return;\n                    }\n                }\n            }\n        }\n    }\n\n    callback(null);\n}\n\nfunction buildSaveConfirmationPayload(currentURL, similarURL) {\n    return {\n        title: \"Item with similar URL to existing one\",\n        message: \"It appears that the item URL you're trying to save:<br>\" +\n            `<i><a href=\"${currentURL}\">${currentURL}</a></i><br>` +\n            \"is pretty similar to<br>\" +\n            `<i><a href=\"${similarURL}\">${similarURL}</a></i><br><br>` +\n            \"Since your choice will affect the way items are tracked in this site futurely,<br>please help us helping you by choosing carefully one of the following options:\",\n        buttons: [\n            \"It's not, save it! Remember this option for this site.\",\n            \"Don't save. Ask me again for items of this site!\",\n            \"Indeed the same item. Don't save! Remember this option for this site. (Use just URL path for accessing items)\",\n            \"For now save this item. Ask me again next time!\"\n        ]\n    };\n}\n\nfunction buildURLConfirmationPayload(canonicalURL, browserURL, domain) {\n    return {\n        title: \"This website recommends to follow this item through a different URL\",\n        message: `<u>${domain}</u> says that a more accurate URL for this item would be:<br>` +\n            `<i><a href=\"${canonicalURL}\">${canonicalURL}</a></i><br>` +\n            \"If this is correct, we recommend you to follow it.<br><br>\" +\n            \"<b>However</b> you can still opt to choose following the current browser URL:<br>\" +\n            `<i><a href=\"${browserURL}\">${browserURL}</a></i><br><br>` +\n            \"Since your choice will affect the way items are tracked in this site futurely,<br>please help us helping you by choosing carefully one of the following options:\",\n        buttons: [\n            \"Use recommended URL. Remember this option for this site\",\n            \"Use recommended URL but just this time\",\n            \"It's not correct, use the current browser URL. Remember this option\",\n            \"Don't use recommended URL. Use the current browser URL instead but just this time\"\n        ]\n    };\n}\n\nfunction checkForURLSimilarity(tabId, domain, currentURL, callback) {\n    chrome.storage.local.get([domain], result => {\n        const domainState = result && result[domain] && JSON.parse(result[domain]) || null;\n        if (domainState) {\n            if (domainState._isPathEnoughToTrack === true) {\n                // since it's true we can say that that domain items' path is enough to track items in this domain\n                searchForEqualPathWatchedItem(domainState, currentURL, similarURL => {\n                    if (similarURL) {\n                        callback(false, false);\n                    } else {\n                        callback(true);\n                    }\n                });\n            } else if (domainState._isPathEnoughToTrack === false) {\n                callback(true);\n            } else {\n                // it's the first time user is being inquired about items similarity in this domain\n                searchForEqualPathWatchedItem(domainState, currentURL, similarURL => {\n                    if (similarURL) {\n                        // found an URL whose host and path are equals to the currentURL trying to be saved\n                        // prompt user to confirm if the item is the same\n\n                        // TODO: Currently this is limited, it needs:\n                        // TODO: Option to say \"if URL differs then item is different, stop annoying me!\"\n\n                        const modalElementId = \"price-tag--save-confirmation\";\n                        chrome.tabs.sendMessage(tabId, {\n                            type: \"CONFIRMATION_DISPLAY.CREATE\",\n                            payload: {elementId: modalElementId}\n                        }, ({status}) => {\n                            if (status === 1) {\n                                const payload = buildSaveConfirmationPayload(currentURL, similarURL);\n                                chrome.tabs.sendMessage(tabId, {\n                                    type: \"CONFIRMATION_DISPLAY.LOAD\",\n                                    payload\n                                }, ({status, index}) => {\n                                    chrome.tabs.sendMessage(tabId, {\n                                        type: \"CONFIRMATION_DISPLAY.REMOVE\",\n                                        payload: {elementId: modalElementId}\n                                    });\n                                    if (status === 1) {\n                                        switch (index) {\n                                            case 0:\n                                                // said Yes: not the same item\n                                                domainState._isPathEnoughToTrack = false;\n                                                chrome.storage.local.set({[domain]: JSON.stringify(domainState)});\n                                                callback(true);\n                                                break;\n                                            case 1:\n                                                callback(false, true);\n                                                break;\n                                            case 2:\n                                                // said No: same item (path is enough for this site items)\n                                                domainState._isPathEnoughToTrack = true;\n                                                chrome.storage.local.set({[domain]: JSON.stringify(domainState)});\n                                                callback(false, false);\n                                                break;\n                                            case 3:\n                                                // said Save this but for others Ask me later\n                                                callback(true);\n                                                break;\n                                            default:\n                                                // cannot recognize this modal button click\n                                                callback(false, true);\n                                                break;\n                                        }\n                                    } else {\n                                        // something in buttons click\n                                        callback(false, true);\n                                    }\n                                });\n                            } else {\n                                // something went wrong creating the modal\n                                callback(false, true);\n                            }\n                        });\n                    }\n                    else {\n                        // no URL has host and path equals to the currentURL (can save the item)\n                        callback(true);\n                    }\n                });\n            }\n        } else {\n            // this means it's the first item being saved belonging to this domain (can save the item)\n            callback(true);\n        }\n    });\n}\n\nfunction getCanonicalPathFromSource(source) {\n    const canonicalElement = source.querySelector(\"link[rel=\\\"canonical\\\"]\");\n    return canonicalElement && canonicalElement.getAttribute(\"href\");\n}\n\nfunction onXHR(url, callback) {\n    const request = new XMLHttpRequest();\n    request.onload = function () {\n        const template = createHTMLTemplate(this.response);\n        callback(template);\n    };\n    request.open(\"GET\", url);\n    request.send();\n\n}\n\nfunction onTabContextChange(tabId, url) {\n    const captureDomain = url.match(MATCHES.CAPTURE.DOMAIN_IN_URL);\n    if (captureDomain) {\n        const [, domain] = captureDomain;\n        State = updateCurrentDomain(State, domain);\n        chrome.storage.local.get([domain], result => {\n            const domainState = result && result[domain] && JSON.parse(result[domain]) || null;\n            // check if user has already a preference to use the canonical URL if available\n            if (domainState && domainState._canUseCanonical === false) {\n                State = updateCanonicalURL(State, null);\n                State = updateCurrentURL(State, url);\n                State = updateBrowserURL(State, url);\n\n                if (domainState._isPathEnoughToTrack === true) {\n                    const protocolHostAndPathFromURL = captureProtocolHostAndPathFromURL(url);\n                    if (protocolHostAndPathFromURL) {\n                        State = updateCurrentURL(State, protocolHostAndPathFromURL);\n                        State = updateBrowserURL(State, protocolHostAndPathFromURL);\n                    }\n                }\n\n                updateAutoSaveStatus(State.currentURL, State.domain);\n                updatePriceUpdateStatus(State.currentURL, State.domain);\n                updateExtensionAppearance(State.domain, State.currentURL);\n            } else {\n                // First thing to do, check:\n                // If canonical was updated (compared to the previously) + if it's relevant\n                State = updateBrowserURL(State, url);\n\n                onXHR(url, template => {\n                    const canonicalURL = getCanonicalPathFromSource(template);\n                    const canUseCanonical = isCanonicalURLRelevant(canonicalURL);\n\n                    if (canUseCanonical) {\n                        State = updateCurrentURL(State, canonicalURL);\n                        State = updateCanonicalURL(State, canonicalURL);\n                    } else {\n                        State = updateCanonicalURL(State, null);\n                        State = updateCurrentURL(State, url);\n\n                        if (domainState && domainState._isPathEnoughToTrack === true) {\n                            const protocolHostAndPathFromURL = captureProtocolHostAndPathFromURL(url);\n                            if (protocolHostAndPathFromURL) {\n                                State = updateCurrentURL(State, protocolHostAndPathFromURL);\n                                State = updateBrowserURL(State, protocolHostAndPathFromURL);\n                            }\n                        }\n                    }\n                    updateAutoSaveStatus(State.currentURL, State.domain);\n                    updatePriceUpdateStatus(State.currentURL, State.domain);\n                    updateExtensionAppearance(State.domain, State.currentURL);\n                });\n            }\n        });\n    }\n}\n\n// TODO: break this down into smaller functions\nfunction attachEvents() {\n    chrome.runtime.onInstalled.addListener(() => {\n        console.log(\"Price tag installed.\");\n    });\n\n    chrome.tabs.onActivated.addListener(() => {\n        chrome.tabs.query({active: true, currentWindow: true}, ([{id, url}]) => {\n            if (url.startsWith(\"http\")) {\n                onTabContextChange(id, url);\n                State = updateFaviconURL(State, State._faviconURLMap[id] || null);\n            } else {\n                setDefaultAppearance();\n            }\n        });\n    });\n\n    chrome.tabs.onUpdated.addListener((tabId, {status, favIconUrl}, {active, url}) => {\n        if (url.startsWith(\"http\")) {\n            if (active) {\n                if (favIconUrl) {\n                    State = updateFaviconURLMapItem(State, tabId, favIconUrl);\n                    State = updateFaviconURL(State, favIconUrl);\n                }\n            }\n        } else {\n            setDefaultAppearance();\n        }\n    });\n\n    chrome.webNavigation.onCompleted.addListener(({frameId}) => {\n        if (frameId === 0) {\n            chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\n                if (tabs.length > 0) {\n                    const [{id, url}] = tabs;\n                    onTabContextChange(id, url);\n                }\n            });\n        }\n    });\n\n    chrome.webNavigation.onHistoryStateUpdated.addListener(() => {\n        chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\n            if (tabs.length > 0) {\n                const [{id: tabId, url}] = tabs;\n                if (url !== undefined && url !== State.browserURL) {\n                    onTabContextChange(tabId, url);\n                }\n            }\n        });\n    });\n\n    chrome.runtime.onMessage.addListener(\n        ({type, payload = {}}, sender, sendResponse) => {\n            const {id} = payload;\n            switch (type) {\n                case \"POPUP.STATUS\":\n                    const {recordActive, autoSaveEnabled, isPriceUpdateEnabled} = State;\n                    sendResponse({status: 1, state: {recordActive, autoSaveEnabled, isPriceUpdateEnabled}});\n                    break;\n                case \"RECORD.ATTEMPT\":\n                    State = toggleRecord(State);\n\n                    if (State.recordActive) {\n                        const {url} = payload;\n                        chrome.tabs.sendMessage(id, {\n                            type: \"RECORD.START\",\n                            payload: {url}\n                        }, onRecordDone.bind(null, id));\n                    } else {\n                        chrome.tabs.sendMessage(id, {type: \"RECORD.CANCEL\"}, onRecordCancel);\n                    }\n                    sendResponse({status: 1, state: {recordActive: State.recordActive}});\n                    break;\n                case \"AUTO_SAVE.STATUS\":\n                    const {currentURL: url, domain} = State;\n                    chrome.storage.local.get([domain], result => {\n                        const domainState = result && result[domain] && JSON.parse(result[domain]) || null;\n                        if (domainState) {\n                            if (domainState._isPathEnoughToTrack === true) {\n                                // since it's true we can say that that domain items' path is enough to track items in this domain\n                                searchForEqualPathWatchedItem(domainState, url, similarURL => {\n                                    if (!similarURL) {\n                                        chrome.tabs.sendMessage(id, {\n                                            type: \"AUTO_SAVE.CHECK_STATUS\",\n                                            payload: {url, selection: State.selection}\n                                        }, onAutoSaveCheckStatus.bind(null, sendResponse));\n                                    } else {\n                                        sendResponse({status: -1});\n                                    }\n                                });\n                            } else {\n                                chrome.tabs.sendMessage(id, {\n                                    type: \"AUTO_SAVE.CHECK_STATUS\",\n                                    payload: {url, selection: State.selection}\n                                }, onAutoSaveCheckStatus.bind(null, sendResponse));\n                            }\n                        } else {\n                            // domain doesn't exist\n                            chrome.tabs.sendMessage(id, {\n                                type: \"AUTO_SAVE.CHECK_STATUS\",\n                                payload: {url, selection: State.selection}\n                            }, onAutoSaveCheckStatus.bind(null, sendResponse));\n                        }\n                    });\n                    return true;\n                case \"AUTO_SAVE.ATTEMPT\":\n                    if (State.autoSaveEnabled) {\n                        const {domain, currentURL: stateUrl, selection, price, faviconURL, faviconAlt, originalBackgroundColor} = State;\n\n                        canDisplayURLConfirmation(State, domain, canDisplay => {\n                            if (canDisplay) {\n                                onConfirmURLForCreateItemAttempt(id, domain, stateUrl, selection, price, faviconURL, faviconAlt, (canSave, useCaninocal) => {\n                                    if (canSave) {\n                                        const url = useCaninocal ? State.canonicalURL : State.browserURL;\n\n                                        checkForURLSimilarity(id, domain, url, (isToSave, autoSaveStatus) => {\n                                            if (isToSave) {\n                                                createItem(domain, url, selection, price, faviconURL, faviconAlt, [ITEM_STATUS.WATCHED], () => {\n                                                    chrome.tabs.sendMessage(id, {\n                                                        type: \"PRICE_TAG.HIGHLIGHT.STOP\",\n                                                        payload: {selection, originalBackgroundColor}\n                                                    }, onSimilarElementHighlight);\n\n                                                    updateExtensionAppearance(domain, url, true);\n                                                    State = disableAutoSave(State);\n\n                                                    sendResponse(false);\n                                                });\n                                            } else {\n                                                // For Exceptions (including when there's similar item - should be caught by \"AUTO_SAVE.STATUS\")\n                                                if (!autoSaveStatus) {\n                                                    State = disableAutoSave(State);\n                                                }\n                                            }\n                                        });\n                                    }\n                                });\n                            } else {\n                                checkForURLSimilarity(id, domain, stateUrl, isToSave => {\n                                    if (isToSave) {\n                                        createItem(domain, stateUrl, selection, price, faviconURL, faviconAlt, [ITEM_STATUS.WATCHED], () => {\n                                            chrome.tabs.sendMessage(id, {\n                                                type: \"PRICE_TAG.HIGHLIGHT.STOP\",\n                                                payload: {selection, originalBackgroundColor}\n                                            }, onSimilarElementHighlight);\n\n                                            updateExtensionAppearance(domain, stateUrl, true);\n                                            State = disableAutoSave(State);\n\n                                            sendResponse(false);\n                                        });\n                                    }\n                                });\n                            }\n                        });\n\n                        return true;\n                    } else {\n                        sendResponse(false);\n                    }\n                    break;\n                case \"AUTO_SAVE.HIGHLIGHT.PRE_START\":\n                    if (State.autoSaveEnabled) {\n                        const {selection} = State;\n                        chrome.tabs.sendMessage(id, {\n                            type: \"PRICE_TAG.HIGHLIGHT.START\",\n                            payload: {selection}\n                        }, onSimilarElementHighlight);\n                    }\n                    break;\n                case \"AUTO_SAVE.HIGHLIGHT.PRE_STOP\":\n                    if (State.autoSaveEnabled) {\n                        const {selection, originalBackgroundColor} = State;\n                        chrome.tabs.sendMessage(id, {\n                            type: \"PRICE_TAG.HIGHLIGHT.STOP\",\n                            payload: {selection, originalBackgroundColor}\n                        }, onSimilarElementHighlight);\n                    }\n                    break;\n                case \"PRICE_UPDATE.STATUS\":\n                    chrome.storage.local.get([State.domain], result => {\n                        const domainItems = result && result[State.domain] ? JSON.parse(result[State.domain]) : {};\n                        const item = domainItems[State.currentURL];\n                        if (item) {\n                            chrome.tabs.sendMessage(id, {\n                                type: \"PRICE_UPDATE.CHECK_STATUS\",\n                                payload: {selection: State.selection}\n                            }, onPriceUpdateCheckStatus.bind(null, sendResponse, item.price));\n                        } else {\n                            sendResponse(false);\n                        }\n                    });\n                    return true;\n                case \"PRICE_UPDATE.ATTEMPT\":\n                    if (State.isPriceUpdateEnabled) {\n                        const {domain, currentURL: stateUrl, selection, price: updatedPrice, originalBackgroundColor} = State;\n                        const price = updatedPrice && toPrice(updatedPrice);\n                        chrome.storage.local.get([domain], result => {\n                            const domainItems = result && result[domain] ? JSON.parse(result[domain]) : {};\n\n                            domainItems[stateUrl] = updateItemTrackStatus(domainItems[stateUrl], price,\n                                null,\n                                [\n                                    ITEM_STATUS.INCREASED, ITEM_STATUS.ACK_INCREASE,\n                                    ITEM_STATUS.DECREASED, ITEM_STATUS.INCREASED,\n                                    ITEM_STATUS.DECREASED, ITEM_STATUS.ACK_DECREASE,\n                                    ITEM_STATUS.DECREASED, ITEM_STATUS.DECREASED,\n                                    ITEM_STATUS.NOT_FOUND\n                                ]);\n                            domainItems[stateUrl] = updateItemDiffPercentage(domainItems[stateUrl]);\n\n                            chrome.storage.local.set({[domain]: JSON.stringify(domainItems)});\n\n                            chrome.tabs.sendMessage(id, {\n                                type: \"PRICE_TAG.HIGHLIGHT.STOP\",\n                                payload: {selection, originalBackgroundColor}\n                            }, onSimilarElementHighlight);\n\n                            State = disablePriceUpdate(State);\n                            sendResponse(false);\n                        });\n                    }\n                    return true;\n                case \"PRICE_UPDATE.HIGHLIGHT.PRE_START\":\n                    if (State.isPriceUpdateEnabled) {\n                        const {selection} = State;\n                        chrome.tabs.sendMessage(id, {\n                            type: \"PRICE_TAG.HIGHLIGHT.START\",\n                            payload: {selection}\n                        }, onSimilarElementHighlight);\n                    }\n                    break;\n                case \"PRICE_UPDATE.HIGHLIGHT.PRE_STOP\":\n                    if (State.isPriceUpdateEnabled) {\n                        const {selection, originalBackgroundColor} = State;\n                        chrome.tabs.sendMessage(id, {\n                            type: \"PRICE_TAG.HIGHLIGHT.STOP\",\n                            payload: {selection, originalBackgroundColor}\n                        }, onSimilarElementHighlight);\n                    }\n                    break;\n                case \"TRACKED_ITEMS.GET\":\n                    getTrackedItems(sendResponse);\n                    return true;\n                case \"TRACKED_ITEMS.UNFOLLOW\":\n                    const {url: itemUrl} = payload;\n                    removeTrackedItem(itemUrl, State.currentURL, sendResponse);\n                    return true;\n            }\n        });\n\n    chrome.notifications.onClicked.addListener(notifId => {\n        chrome.tabs.create({url: State.notifications[notifId].url});\n        clearNotification(notifId);\n    });\n\n\n    // TODO: update and keep tracking\n    chrome.notifications.onButtonClicked.addListener((notifId, buttonIndex) => {\n        const {domain, url, type} = State.notifications[notifId];\n        switch (buttonIndex) {\n            case 0:\n                switch (type) {\n                    case ITEM_STATUS.DECREASED:\n                        chrome.storage.local.get([domain], result => {\n                            const domainItems = result && result[domain] ? JSON.parse(result[domain]) : {};\n                            if (domainItems[url]) {\n                                const {price: newPrice} = domainItems[url];\n                                domainItems[url] = updateItemTrackStatus(domainItems[url], newPrice, null, [ITEM_STATUS.DECREASED, ITEM_STATUS.ACK_DECREASE], true);\n                                chrome.storage.local.set({[domain]: JSON.stringify(domainItems)});\n                            }\n                        });\n                        break;\n                    case ITEM_STATUS.INCREASED:\n                        chrome.storage.local.get([domain], result => {\n                            const domainItems = result && result[domain] ? JSON.parse(result[domain]) : {};\n                            if (domainItems[url]) {\n                                const {previousPrice: priceBeforeIncreasing} = domainItems[url];\n                                domainItems[url] = updateItemTrackStatus(domainItems[url], priceBeforeIncreasing, null, [ITEM_STATUS.INCREASED, ITEM_STATUS.ACK_INCREASE], true);\n                                chrome.storage.local.set({[domain]: JSON.stringify(domainItems)});\n                            }\n                        });\n                        break;\n                }\n                break;\n            case 1:\n                switch (type) {\n                    case ITEM_STATUS.DECREASED, ITEM_STATUS.INCREASED:\n                        chrome.storage.local.get([domain], result => {\n                            const domainItems = result && result[domain] ? JSON.parse(result[domain]) : {};\n                            if (domainItems[url]) {\n                                domainItems[url] = updateItemTrackStatus(domainItems[url], null, null, ALL_ITEM_STATUSES); // stop watching\n                                chrome.storage.local.set({[domain]: JSON.stringify(domainItems)});\n                            }\n                        });\n                        break;\n                }\n                break;\n        }\n    });\n\n    chrome.notifications.onClosed.addListener(clearNotification);\n}\n\nfunction filterAllTrackedItems(result) {\n    let filteredResult = {};\n    for (let domain in result) {\n        if (result.hasOwnProperty(domain) && matchesDomain(domain) && result[domain]) {\n            const domainItems = JSON.parse(result[domain]);\n            filteredResult = {\n                ...filteredResult,\n                [domain]: domainItems\n            };\n        }\n    }\n    return filteredResult;\n}\n\nfunction toStorageStateFormat(state) {\n    return Object.keys(state).reduce((newState, domain) => {\n        return {\n            ...newState,\n            [domain]: JSON.stringify(state[domain])\n        }\n    }, {});\n}\n\nfunction syncStorageState() {\n    chrome.storage.local.get(null, localResult => {\n        const localState = filterAllTrackedItems(localResult);\n\n        chrome.storage.sync.get(null, syncResult => {\n                const syncState = filterAllTrackedItems(syncResult);\n                // TODO: replace this with a lodash cloneDeep !!\n                const freshState = JSON.parse(JSON.stringify(localState));\n\n                for (let syncDomain in syncState) {\n                    if (syncState.hasOwnProperty(syncDomain) && matchesDomain(syncDomain)) {\n                        const syncStateDomain = syncState[syncDomain];\n                        if (!freshState[syncDomain]) {\n                            // TODO: replace this with a lodash cloneDeep !!\n                            freshState[syncDomain] = JSON.parse(JSON.stringify(syncStateDomain));\n                        } else {\n                            for (let syncUrl in syncStateDomain) {\n                                if (syncStateDomain.hasOwnProperty(syncUrl)) {\n                                    const syncItem = syncStateDomain[syncUrl];\n                                    if (!freshState[syncDomain][syncUrl]) {\n                                        freshState[syncDomain][syncUrl] = Object.assign({}, syncItem);\n                                    } else if (syncItem.lastUpdateTimestamp > freshState[syncDomain][syncUrl].lastUpdateTimestamp) {\n                                        // TODO: replace this with a lodash cloneDeep !!\n                                        freshState[syncDomain][syncUrl] = JSON.parse(JSON.stringify(syncItem));\n                                    }\n                                }\n                            }\n                        }\n\n                    }\n                }\n\n                chrome.storage.local.set(toStorageStateFormat(freshState));\n                chrome.storage.sync.set(toStorageStateFormat(freshState));\n            }\n        );\n    });\n}\n\nfunction setupSyncStorageState() {\n    syncStorageState();\n    setInterval(syncStorageState, SYNCHING_INTERVAL);\n}\n\nfunction bootstrap() {\n    setupSyncStorageState();\n    setupTrackingPolling();\n    attachEvents();\n}\n\nbootstrap();\n"],"names":["State","recordActive","notifications","notificationsCounter","autoSaveEnabled","isPriceUpdateEnabled","selection","isSimilarElementHighlighted","originalBackgroundColor","isCurrentPageTracked","faviconURL","_faviconURLMap","currentURL","canonicalURL","browserURL","domain","DEFAULT_ICON","TRACKED_ITEM_ICON","DEFAULT_TITLE","TRACKED_ITEM_TITLE","PRICE_CHECKING_INTERVAL","SYNCHING_INTERVAL","ICONS","PRICE_UPDATE","PRICE_NOT_FOUND","PRICE_FIX","MATCHES","PRICE","HOSTNAME","DOMAIN","URL","CAPTURE","DOMAIN_IN_URL","HOSTNAME_AND_PATH","PROTOCOL_HOSTNAME_AND_PATH","ITEM_STATUS","WATCHED","NOT_FOUND","INCREASED","DECREASED","ACK_DECREASE","ACK_INCREASE","FIXED","ALL_ITEM_STATUSES","Object","values","updateItemCurrentPrice","item","newPrice","updateItemDiffPercentage","previousPrice","currentPrice","diff","Math","abs","price","diffPerc","parseFloat","toFixed","diffPercentage","ceil","floor","updateItemTrackStatus","statusesToAdd","statusesToRemove","forceStartingPrice","statuses","array","length","filter","status","includes","removeStatuses","Array","from","Set","updatedItem","lastUpdateTimestamp","Date","getTime","startingPrice","isWatched","isNotFound","hasAcknowledgeDecrease","hasAcknowledgeIncrease","onConfirmURLForCreateItemAttempt","tabId","url","faviconAlt","callback","chrome","tabs","sendMessage","type","payload","elementId","title","message","buttons","buildURLConfirmationPayload","index","storage","local","get","result","domainState","JSON","parse","_canUseCanonical","set","stringify","updateCurrentURL","onRecordCancel","disableRecord","onAutoSaveCheckStatus","sendResponse","setSelectionInfo","updateFaviconURL","onSimilarElementHighlight","isHighlighted","state","setSimilarElementHighlight","createItem","items","trackedPrice","toPrice","timestamp","createTrackedItem","undefined","disableAutoSave","disableCurrentPageTracked","enableCurrentPageTracked","updateCanonicalURL","updateBrowserURL","canDisplayURLConfirmation","isUseCanonicalPrefUnset","setDefaultAppearance","browserAction","setTitle","setIcon","path","setTrackedItemAppearance","disablePriceUpdate","checkForPriceChanges","hasOwnProperty","matchesDomain","domainItems","matchesURL","request","XMLHttpRequest","targetPrice","onload","template","createHTMLTemplate","this","response","textContent","querySelector","textContentMatch","match","createNotification","notificationId","notificationOptions","push","e","console","warn","open","send","getTrackedItems","trackedItems","keys","forEach","key","domainData","string","test","matchesHostname","sort","sortItemsByTime","clearNotification","notifId","wasClosedByUser","clear","wasClickedByUser","newState","deleteNotificationsItem","iconUrl","contextMessage","extraOptions","options","requireInteraction","create","id","notificationState","updateNotificationsItem","formattedPrice","replace","html","document","createElement","trim","innerHTML","content","isCanonicalURLRelevant","canonical","tsA","tsB","updateAutoSaveStatus","isItemNullOrUnwatched","urlFromDomain","enableAutoSave","updatePriceUpdateStatus","hasItemPriceIncOrDec","enablePriceUpdate","updateExtensionAppearance","currentDomain","forcePageTrackingTo","parseDomainState","captureHostAndPathFromURL","captureHostAndPath","hostAndPath","captureProtocolHostAndPathFromURL","captureProtocolHostAndPath","protocolHostAndPath","searchForEqualPathWatchedItem","currentHostAndPath","checkForURLSimilarity","_isPathEnoughToTrack","similarURL","modalElementId","buildSaveConfirmationPayload","onTabContextChange","captureDomain","updateCurrentDomain","protocolHostAndPathFromURL","onXHR","source","canonicalElement","getAttribute","getCanonicalPathFromSource","attachEvents","runtime","onInstalled","addListener","log","onActivated","query","active","currentWindow","startsWith","onUpdated","favIconUrl","updateFaviconURLMapItem","webNavigation","onCompleted","frameId","onHistoryStateUpdated","onMessage","sender","toggleRecord","canDisplay","canSave","useCaninocal","isToSave","bind","stateUrl","autoSaveStatus","updatedPrice","itemUrl","found","removeTrackedItem","onClicked","onButtonClicked","buttonIndex","priceBeforeIncreasing","onClosed","filterAllTrackedItems","filteredResult","toStorageStateFormat","reduce","syncStorageState","localResult","localState","sync","syncResult","syncState","freshState","syncDomain","syncStateDomain","syncUrl","syncItem","assign","setInterval"],"mappings":"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"}